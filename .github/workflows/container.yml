name: "ci: container (ghcr)"

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

concurrency:
  group: container-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: build-and-publish
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read project version
        id: version
        run: |
          python <<'PY'
          from pathlib import Path
          import os
          import re
          import sys
          import tomllib

          pyproject_path = Path('pyproject.toml')
          if not pyproject_path.is_file():
              print('pyproject.toml is required to determine the image version.', file=sys.stderr)
              sys.exit(1)

          with pyproject_path.open('rb') as f:
              data = tomllib.load(f)

          version = (
              data.get('project', {}).get('version')
              or data.get('tool', {}).get('poetry', {}).get('version')
          )

          semver_pattern = re.compile(r'^[0-9]+(?:\.[0-9]+){2}(?:-[0-9A-Za-z.-]+)?(?:\+[0-9A-Za-z.-]+)?$')
          valid_version = version if version and semver_pattern.fullmatch(version) else ''
          outputs = {
              'version': valid_version
          }

          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              for key, value in outputs.items():
                  fh.write(f"{key}={value}\n")
          PY

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=short,prefix=sha-
            type=raw,value=${{ env.REGISTRY_IMAGE }}:v${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.version != '' }}
          labels: |
            type=raw,value=org.opencontainers.image.version=${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.version != '' }}

      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summarize published image
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Published tags:" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.meta.outputs.tags }}" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
