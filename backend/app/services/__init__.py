"""Service layer for backend operations."""

from .audit_log import (
    AuditEventQueryResult,
    AuditEventRecord,
    list_entity_events,
    list_events,
    record_event,
)
from .configuration_revisions import (
    ActiveConfigurationRevisionNotFoundError,
    ConfigurationRevisionMismatchError,
    ConfigurationRevisionNotFoundError,
    create_configuration_revision,
    delete_configuration_revision,
    get_active_configuration_revision,
    get_configuration_revision,
    list_configuration_revisions,
    resolve_configuration_revision,
    update_configuration_revision,
)
from .jobs import (
    InvalidJobStatusError,
    JobImmutableError,
    JobNotFoundError,
    generate_job_id,
    create_job,
    get_job,
    list_jobs,
    update_job,
)
from .documents import (
    DocumentNotFoundError,
    InvalidDocumentExpirationError,
    store_document,
    list_documents,
    get_document,
    resolve_document_path,
    iter_document_file,
)
from .maintenance_status import (
    get_auto_purge_status,
    record_auto_purge_failure,
    record_auto_purge_success,
)

__all__ = [
    "AuditEventQueryResult",
    "AuditEventRecord",
    "list_entity_events",
    "list_events",
    "record_event",
    "ActiveConfigurationRevisionNotFoundError",
    "ConfigurationRevisionMismatchError",
    "ConfigurationRevisionNotFoundError",
    "create_configuration_revision",
    "delete_configuration_revision",
    "get_active_configuration_revision",
    "get_configuration_revision",
    "list_configuration_revisions",
    "resolve_configuration_revision",
    "update_configuration_revision",
    "InvalidJobStatusError",
    "JobImmutableError",
    "JobNotFoundError",
    "generate_job_id",
    "create_job",
    "get_job",
    "list_jobs",
    "update_job",
    "DocumentNotFoundError",
    "InvalidDocumentExpirationError",
    "store_document",
    "list_documents",
    "get_document",
    "resolve_document_path",
    "iter_document_file",
    "get_auto_purge_status",
    "record_auto_purge_failure",
    "record_auto_purge_success",
]
